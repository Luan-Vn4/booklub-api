### Spring ###
spring.application.name=booklub-api
spring.main.banner-mode=off
spring.config.import=optional:file:.env[.properties]

### Database ###
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Valida as entidades do JPA com o esquema criado pelas migrations
spring.jpa.hibernate.ddl-auto=validate

### Keycloack ###
keycloak.client-id=${KEYCLOAK_CLIENT_ID}
keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}
keycloak.client-url=${KEYCLOAK_AUTH_URL}
keycloak.client-realm=${KEYCLOAK_REALM}

### Jwt ####
jwt.auth.converter.resource-id: ${KEYCLOAK_CLIENT_ID}
jwt.auth.converter.principle-attribute: preferred_username

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

### Mudando a porta porque o Keycloak por padr√£o roda na 8080
server.port=${SERVER_PORT:8081}

### Media Storage ###
s3.url=${S3_URL}
s3.access.name=${S3_ACCESS_NAME}
s3.access.secret=${S3_ACCESS_SECRET}

### Google Books ###
google.books.api.base-url=${GOOGLE_BOOKS_API_BASE_URL}
google.books.api.key=${GOOGLE_BOOKS_API_KEY}

###Flyway aceitar as tables do keycloak
spring.flyway.baseline-on-migrate=true

###Teste WebClient
spring.backend.host=https://openlibrary.org

